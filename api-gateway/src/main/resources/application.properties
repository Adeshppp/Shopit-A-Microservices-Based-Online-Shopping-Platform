

# Eureka client configurations
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=api-gateway

# To get more logs and to understand what happens behind the scenes when request made to API gateway
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator = INFO
logging.level.org.springframework.cloud.gateway = TRACE


## Product Service Route
spring.cloud.gateway.routes[0].id=product-service
#spring.cloud.gateway.routes[0].uri=http://product-service
# Use load balancing for client-side Load Balancing
spring.cloud.gateway.routes[0].uri=lb://product-service
# Route requests with the path /api/product to the product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product


## Order Service Route
spring.cloud.gateway.routes[1].id=order-service
# Use load balancing for client-side Load Balancing
spring.cloud.gateway.routes[1].uri=lb://order-service
# Route requests with the path /api/order to the order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

## Discovery Server Route
spring.cloud.gateway.routes[2].id=discovery-server
# Direct requests with the path /eureka/web to the Eureka server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
# Define a filter to change the path of the requested URL
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
# In this case, when a client makes a request to access the discovery server page,
# the API gateway will redirect that request to http://localhost:8761 from http://localhost:8080/eureka/web as the API gateway is hosted on port 8080.
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

# The discovery server route is currently loading only a plain HTML page.
# This is because routes for other static resources such as CSS and JavaScript files have not been configured yet.
# Proper configuration of these resources is essential to ensure web pages function correctly and appear as intended.

## Discovery Service Static Resources Route
spring.cloud.gateway.routes[3].id=discovery-server-static
# Direct requests for static resources to the Eureka server
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

## Inventory Service Route
spring.cloud.gateway.routes[4].id=inventory-service
#spring.cloud.gateway.routes[4].uri=http://inventory-service
# Use load balancing for client-side Load Balancing
spring.cloud.gateway.routes[4].uri=lb://inventory-service
# Route requests with the path /api/inventory to the inventory-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/inventory

## configuration for gateway to talk to the keycloak

# Issuer from OpenID Endpoint Configuration of keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9090/realms/spring-boot-microservices-realm


## zipkin properties

spring.zipkin.base-url=http://localhost:9411
#tracking 100% of requests, which we are receiving
spring.sleuth.sampler.probability=1.0 
