# Server Port Configuration
# By declaring 0, Spring Boot will pick a random free port
server.port=0

# Eureka client configurations
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=notification-service

## zipkin properties

spring.sleuth.integration.enabled=true

spring.zipkin.base-url=http://localhost:9411
# tracking 100% of requests, which we are receiving
spring.sleuth.sampler.probability=1.0 


# Apache Kafka properties

# Change the bootstrap servers to the appropriate address and port of your Kafka cluster.
spring.kafka.bootstrap-servers=localhost:9092

# By declaring the property below, we are telling Kafka to use "notificationTopic" as the default topic to send messages.
# If no explicit topic is specified when sending a message, it will be sent to "notificationTopic".
spring.kafka.template.default-topic=notificationTopic

# The consumer group ID used by the Kafka consumer. This helps to identify consumer group members and manage message distribution.
spring.kafka.consumer.group-id=notificationId

# The property below sets the key deserializer for the Kafka consumer to the StringDeserializer.
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# The property below sets the value deserializer for the Kafka consumer to the JsonDeserializer.
# This deserializer allows us to receive messages with JSON payloads.
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# The property below maps the "event" property in the JSON payload to the "com.OnlineShopping.notificationservice.OrderPlacedEvent" type.
# This mapping is used by the Kafka consumer to deserialize JSON messages received from the Kafka cluster into Java objects with the correct type.
# The producer of the "event" property is located in the "order service," where the token is declared as "event."
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.OnlineShopping.notificationservice.OrderPlacedEvent
